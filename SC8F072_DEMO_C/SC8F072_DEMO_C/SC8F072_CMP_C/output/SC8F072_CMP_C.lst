

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Fri Oct 27 08:56:46 2023

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	SC8F072
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	pa_nodes0,global,class=CODE,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 1.45
    14                           ; Generated 16/11/2017 GMT
    15                           ; 
    16                           ; Copyright 漏 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     
    48                           	psect	text0
    49  0000                     __ptext0:	
    50  0014                     _OSCCON	set	20
    51  0010                     _CMPCON1	set	16
    52  000F                     _CMPCON0	set	15
    53  000E                     _PIE1	set	14
    54  000C                     _ODCONB	set	12
    55  000B                     _INTCON	set	11
    56  0009                     _IOCB	set	9
    57  0008                     _WPUB	set	8
    58  0007                     _WPDB	set	7
    59  0006                     _PORTB	set	6
    60  0005                     _TRISB	set	5
    61  0001                     _OPTION_REG	set	1
    62  007F                     _CMPEN	set	127
    63  006D                     _CMPIF	set	109
    64                           
    65                           	psect	cinit
    66  000B                     start_initialization:	
    67                           ; #config settings
    68                           
    69  000B                     __initialization:	
    70  000B                     end_of_initialization:	
    71                           ;End of C runtime variable initialization code
    72                           
    73  000B                     __end_of__initialization:	
    74  000B  0183               	clrf	3
    75  000C  280D               	ljmp	_main	;jump to C main() function
    76                           
    77                           	psect	cstackCOMMON
    78  0070                     __pcstackCOMMON:	
    79  0070                     ?_main:	
    80  0070                     ?_CMP_Isr:	
    81                           ; 1 bytes @ 0x0
    82                           
    83  0070                     ??_CMP_Isr:	
    84                           ; 1 bytes @ 0x0
    85                           
    86                           
    87                           ; 1 bytes @ 0x0
    88  0070                     	ds	2
    89  0072                     ??_main:	
    90                           
    91                           	psect	maintext
    92  000D                     __pmaintext:	
    93                           ; 1 bytes @ 0x2
    94 ;;
    95 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    96 ;;
    97 ;; *************** function _main *****************
    98 ;; Defined at:
    99 ;;		line 14 in file "H:\MyDownloads\说明书&测试报告\开发包\SC8F072开发包\SC8F072_DEMO_C\SC8F072_CMP_C\SC8F072_CMP_C.c"
   100 ;; Parameters:    Size  Location     Type
   101 ;;		None
   102 ;; Auto vars:     Size  Location     Type
   103 ;;		None
   104 ;; Return value:  Size  Location     Type
   105 ;;                  1    wreg      void 
   106 ;; Registers used:
   107 ;;		wreg, status,2
   108 ;; Tracked objects:
   109 ;;		On entry : B00/0
   110 ;;		On exit  : 0/0
   111 ;;		Unchanged: 0/0
   112 ;; Data sizes:     COMMON   BANK0   BANK1
   113 ;;      Params:         0       0       0
   114 ;;      Locals:         0       0       0
   115 ;;      Temps:          0       0       0
   116 ;;      Totals:         0       0       0
   117 ;;Total ram usage:        0 bytes
   118 ;; Hardware stack levels required when called:    1
   119 ;; This function calls:
   120 ;;		Nothing
   121 ;; This function is called by:
   122 ;;		Startup code after reset
   123 ;; This function uses a non-reentrant model
   124 ;;
   125                           
   126                           
   127                           ;psect for function _main
   128  000D                     _main:	
   129                           
   130                           ;incstack = 0
   131                           ; Regs used in _main: [wreg+status,2]
   132  000D  0000               	nop	;# 
   133  000E  0064               	clrwdt	;# 
   134                           
   135                           ;SC8F072_CMP_C.c: 19: OSCCON = 0x72;
   136  000F  3072               	movlw	114
   137  0010  1283               	bcf	3,5	;RP0=0, select bank0
   138  0011  0094               	movwf	20	;volatile
   139                           
   140                           ;SC8F072_CMP_C.c: 20: OPTION_REG = 0x09;
   141  0012  3009               	movlw	9
   142  0013  0081               	movwf	1	;volatile
   143                           
   144                           ;SC8F072_CMP_C.c: 23: WPUB = 0B00000000;
   145  0014  0188               	clrf	8	;volatile
   146                           
   147                           ;SC8F072_CMP_C.c: 24: WPDB = 0B00000000;
   148  0015  0187               	clrf	7	;volatile
   149                           
   150                           ;SC8F072_CMP_C.c: 25: ODCONB = 0B00000000;
   151  0016  018C               	clrf	12	;volatile
   152                           
   153                           ;SC8F072_CMP_C.c: 26: IOCB = 0B00000000;
   154  0017  0189               	clrf	9	;volatile
   155                           
   156                           ;SC8F072_CMP_C.c: 28: TRISB = 0B00000000;
   157  0018  0185               	clrf	5	;volatile
   158                           
   159                           ;SC8F072_CMP_C.c: 54: CMPCON0 = 0B00111001;
   160  0019  3039               	movlw	57
   161  001A  008F               	movwf	15	;volatile
   162                           
   163                           ;SC8F072_CMP_C.c: 69: CMPCON1 = 0B10010111;
   164  001B  3097               	movlw	151
   165  001C  0090               	movwf	16	;volatile
   166                           
   167                           ;SC8F072_CMP_C.c: 72: INTCON = 0XC0;
   168  001D  30C0               	movlw	192
   169  001E  008B               	movwf	11	;volatile
   170                           
   171                           ;SC8F072_CMP_C.c: 73: PIE1 = 0X20;
   172  001F  3020               	movlw	32
   173  0020  008E               	movwf	14	;volatile
   174                           
   175                           ;SC8F072_CMP_C.c: 74: CMPEN = 1;
   176  0021  178F               	bsf	15,7	;volatile
   177                           
   178                           ;SC8F072_CMP_C.c: 75: CMPIF =0;
   179  0022  128D               	bcf	13,5	;volatile
   180  0023                     l601:	
   181                           ;SC8F072_CMP_C.c: 76: while(1)
   182                           
   183  0023  0064               	clrwdt	;# 
   184  0024  2823               	goto	l601
   185  0025                     __end_of_main:	
   186                           
   187                           	psect	text1
   188  0025                     __ptext1:	
   189 ;; *************** function _CMP_Isr *****************
   190 ;; Defined at:
   191 ;;		line 91 in file "H:\MyDownloads\说明书&测试报告\开发包\SC8F072开发包\SC8F072_DEMO_C\SC8F072_CMP_C\SC8F072_CMP_C.c"
   192 ;; Parameters:    Size  Location     Type
   193 ;;		None
   194 ;; Auto vars:     Size  Location     Type
   195 ;;		None
   196 ;; Return value:  Size  Location     Type
   197 ;;                  1    wreg      void 
   198 ;; Registers used:
   199 ;;		wreg, status,2, status,0
   200 ;; Tracked objects:
   201 ;;		On entry : 0/0
   202 ;;		On exit  : 100/0
   203 ;;		Unchanged: 0/0
   204 ;; Data sizes:     COMMON   BANK0   BANK1
   205 ;;      Params:         0       0       0
   206 ;;      Locals:         0       0       0
   207 ;;      Temps:          2       0       0
   208 ;;      Totals:         2       0       0
   209 ;;Total ram usage:        2 bytes
   210 ;; Hardware stack levels used:    1
   211 ;; This function calls:
   212 ;;		Nothing
   213 ;; This function is called by:
   214 ;;		Interrupt level 1
   215 ;; This function uses a non-reentrant model
   216 ;;
   217                           
   218                           
   219                           ;psect for function _CMP_Isr
   220  0025                     _CMP_Isr:	
   221                           
   222                           ;SC8F072_CMP_C.c: 93: if(CMPIF)
   223  0025  1283               	bcf	3,5	;RP0=0, select bank0
   224  0026  1E8D               	btfss	13,5	;volatile
   225  0027  282B               	goto	i1l610
   226                           
   227                           ;SC8F072_CMP_C.c: 94: {
   228                           ;SC8F072_CMP_C.c: 95: CMPIF = 0;
   229  0028  128D               	bcf	13,5	;volatile
   230                           
   231                           ;SC8F072_CMP_C.c: 96: PORTB ^= 0X10;
   232  0029  3010               	movlw	16
   233  002A  0686               	xorwf	6,f	;volatile
   234  002B                     i1l610:	
   235  002B  0871               	movf	??_CMP_Isr+1,w
   236  002C  008A               	movwf	10
   237  002D  0E70               	swapf	??_CMP_Isr^(0+-128),w
   238  002E  0083               	movwf	3
   239  002F  0EFE               	swapf	126,f
   240  0030  0E7E               	swapf	126,w
   241  0031  0009               	retfie
   242  0032                     __end_of_CMP_Isr:	
   243  007E                     btemp	set	126	;btemp
   244  007E                     wtemp0	set	126
   245                           
   246                           	psect	intentry
   247  0004                     __pintentry:	
   248                           ;incstack = 0
   249                           ; Regs used in _CMP_Isr: [wreg+status,2+status,0]
   250                           
   251  0004                     interrupt_function:	
   252  007E                     saved_w	set	btemp
   253  0004  00FE               	movwf	btemp
   254  0005  0E03               	swapf	3,w
   255  0006  00F0               	movwf	??_CMP_Isr
   256  0007  080A               	movf	10,w
   257  0008  00F1               	movwf	??_CMP_Isr+1
   258  0009  2825               	ljmp	_CMP_Isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       2
    BANK0            80      0       0
    BANK1            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _CMP_Isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _CMP_Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _CMP_Isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _CMP_Isr                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _CMP_Isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      0       0       4        0.0%
BITBANK1            50      0       0       5        0.0%
BANK1               50      0       0       6        0.0%
ABS                  0      0       0       7        0.0%
DATA                 0      0       0       8        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Oct 27 08:56:46 2023

                    l601 0023          __end_of_CMP_Isr 0032                     _IOCB 0009  
                   _PIE1 000E                     _WPDB 0007                     _WPUB 0008  
                   _main 000D                     btemp 007E                     start 000A  
                  ?_main 0070                    _CMPIF 006D                    _CMPEN 007F  
                  i1l610 002B                    _PORTB 0006                    _TRISB 0005  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000B             __end_of_main 0025                   ??_main 0072  
              ??_CMP_Isr 0070                   _ODCONB 000C                   _INTCON 000B  
                 _OSCCON 0014                   saved_w 007E  __end_of__initialization 000B  
         __pcstackCOMMON 0070               __pmaintext 000D               __pintentry 0004  
                _CMPCON0 000F                  _CMPCON1 0010                  _CMP_Isr 0025  
                __ptext0 0000                  __ptext1 0025     end_of_initialization 000B  
    start_initialization 000B                 ?_CMP_Isr 0070                ___latbits 0000  
      interrupt_function 0004         __size_of_CMP_Isr 000D            __size_of_main 0018  
               intlevel1 0000               _OPTION_REG 0001  
