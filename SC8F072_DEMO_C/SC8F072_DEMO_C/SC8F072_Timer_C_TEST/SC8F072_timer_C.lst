---- H:\MyDownloads\说明书&测试报告\开发包\SC8F072开发包\SC8F072_DEMO_C\SC8F072_Timer_C_TEST\SC8F072_Timer2_C.c ----------------------------------------------------------------------
1:                /*-------------------------------------------
2:                
3:                程序名称：Timer2定时中断程序
4:                日期版本：2023/06/14 <V1.0>
5:                
6:                备注：   
7:                
8:                *本程序由 &应用支持部& 编写整理
9:                -------------------------------------------*/
10:               
11:               
12:               #include <sc.h>				//芯片头文件，会根据工程选项自动寻找对应型号头文件
13:               
14:               void Init_System();
15:               
16:               void main()
17:               {
18:               	Init_System();
  0031    200D    CALL	0xD
19:               	while(1)			
  0032    0064    CLRWDT
  0033    2832    JP	0x32
20:               	{
21:               		asm("clrwdt");
22:               	}
23:               }
24:               
25:               
26:               /***********************************************
27:               函数名称：Timer_Isr
28:               函数功能：中断服务
29:               入口参数：无
30:               出口参数：无
31:               备注：
32:               ************************************************/
33:               void interrupt Timer_Isr()
34:               {
35:               	if(TMR2IF)
  0024    1283    CLRB	0x3,5
  0025    1C8D    SNZB	0xD,1
  0026    282A    JP	0x2A
36:               	{
37:               		TMR2IF = 0;	//清中断标志位
  0027    108D    CLRB	0xD,1
38:               		PORTB ^= 0X01;
  0028    3001    LDIA	0x1
  0029    0686    XORR	0x6
  002A    0871    LD	A,0x71
  002B    008A    LD	0xA,A
  002C    0E70    SWAPA	0x70
  002D    0083    LD	0x3,A
  002E    0EFE    SWAPR	0x7E
  002F    0E7E    SWAPA	0x7E
  0030    0009    RETI
39:               	}
40:               }
41:               
42:               /***********************************************
43:               函数名称：Init_System
44:               函数功能：系统初始化
45:               入口参数：无
46:               出口参数：无
47:               备注：
48:               ************************************************/
49:               void Init_System()
50:               {
51:               	asm("nop");
52:               	asm("clrwdt");
53:               	INTCON = 0;					//系统初始化
  000F    018B    CLR	0xB
54:               	OSCCON = 0x72;				//16MHZ,内部振荡器用作系统时钟,CONFIG关闭WDT时必需软件打开WDT
  0010    3072    LDIA	0x72
  0011    1283    CLRB	0x3,5
  0012    0094    LD	0x14,A
55:               	OPTION_REG = 0x00;			//配置TIMER0时间，00为2分频
  0013    0181    CLR	0x1
  0014    0064    CLRWDT
56:               	asm("clrwdt");
57:               	
58:                   WPUB = 0B00111000;			//初始化上拉
  0015    3038    LDIA	0x38
  0016    1283    CLRB	0x3,5
  0017    0088    LD	0x8,A
59:                	WPDB = 0B00000000;			//初始化下拉
  0018    0187    CLR	0x7
60:               	TRISB = 0B00111000;			//初始化IO状态
  0019    0085    LD	0x5,A
61:               	PORTB = 0B00000000;			//初始化输出
  001A    0186    CLR	0x6
62:               	
63:               	
64:               	/**********  T2CON  *****************************************
65:               		Bit7      CLK_SEL:  时钟源选择
66:               			1=  选择外部 FLSE /4 作为 TMR2 时钟源（休眠态可继续计数）
67:               			0=  选择内部 FSYS /4 作为 TMR2 时钟源
68:               		Bit6~Bit3 TOUTPS<3:0>: TIMER2输出后分频比选择位。 
69:               			0000= 1:1后分频比； 
70:               			0001= 1:2后分频比； 
71:               			0010= 1:3后分频比； 
72:               			0011= 1:4后分频比； 
73:               			0100= 1:5后分频比； 
74:               			0101= 1:6后分频比； 
75:               			0110= 1:7后分频比； 
76:               			0111= 1:8后分频比； 
77:               			1000= 1:9后分频比； 
78:               			1001= 1:10后分频比； 
79:               			1010= 1:11后分频比； 
80:               			1011= 1:12后分频比； 
81:               			1100= 1:13后分频比； 
82:               			1101= 1:14后分频比； 
83:               			1110= 1:15后分频比； 
84:               			1111= 1:16后分频比。 
85:               		Bit2 TMR2ON: TIMER2使能位； 
86:               			1= 使能TIMER2； 
87:               			0= 禁止TIMER2。
88:               		Bit1~Bit0 T2CKPS<1:0>: TIMER2时钟预分频比选择位； 
89:               			00= 预分频值为1； 
90:               			01= 预分频值为4； 
91:               			1x= 预分频值为16。  
92:               	****************************************************************/
93:               	PR2 = 249;					//设定Timer初始值，定时周期是250*4/16M=62.5uS
  001B    30F9    LDIA	0xF9
  001C    0091    LD	0x11,A
94:               	TMR2IF = 0;
  001D    108D    CLRB	0xD,1
95:               	TMR2IE = 1;					//使能Timer2溢出中断
  001E    148E    SETB	0xE,1
96:               
97:               	T2CON = 0B00000101;			//开启Timer2，预分频为1：4，后分频为1：1，则定时时间为（249+1）*4*（4/16M）=250us
  001F    3005    LDIA	0x5
  0020    0093    LD	0x13,A
98:               								//timer2的时钟源为OSCCON配置的系统时钟/4
99:               	INTCON = 0XC0;				//开启总中断及外设中断
  0021    30C0    LDIA	0xC0
  0022    008B    LD	0xB,A
  0023    0008    RET
100:              
101:              }
---- stringtab ------------------------------------------------------------------
---- reset_enter ------------------------------------------------------------------
  0000    280A    JP	0xA
  000A    280B    JP	0xB
---- start_initialization ------------------------------------------------------------------
---- interrupt_function_enter ----------------------------------------------------------
  0004    00FE    LD	0x7E,A
  0005    0E03    SWAPA	0x3
  0006    00F0    LD	0x70,A
  0007    080A    LD	A,0xA
  0008    00F1    LD	0x71,A
  0009    2824    JP	0x24
---- common_function ------------------------------------------------------------------
  000B    0183    CLR	0x3
  000C    2831    JP	0x31
  000D    0000    NOP
  000E    0064    CLRWDT
