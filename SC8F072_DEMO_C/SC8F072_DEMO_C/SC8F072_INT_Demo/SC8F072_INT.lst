---- C:\Users\86135\Desktop\项目实践\SC8F072_DEMO_C\SC8F072_DEMO_C\SC8F072_INT_Demo\PB_Interrupt_Demo.c ----------------------------------------------------------------------
1:                /*-------------------------------------------
2:                功能：PORB电平变化中断演示
3:                版本：V1.0
4:                日期：2021.01.05 
5:                
6:                *本程序由 中微半导体 &应用支持部& 编写整理
7:                *公司网址 www.mcu.com.cn
8:                *
9:                -------------------------------------------*/
10:               
11:               #include <sc.h>
12:               
13:               
14:               void main()
  000D    0000    NOP
  000E    0064    CLRWDT
15:               {
16:               	asm("nop");
17:               	asm("clrwdt");
18:               	
19:               	OSCCON = 0x70;			//内部振荡器用作系统时钟
  000F    3070    LDIA	0x70
  0010    1283    CLRB	0x3,5
  0011    0094    LD	0x14,A
20:               	OPTION_REG = 0;			//预分频寄存器设置
  0012    0181    CLR	0x1
21:               	TRISA = 0;
  0013    1683    SETB	0x3,5
  0014    0185    CLR	0x5
22:               	
23:               	PR2 = 249;					//设定Timer初始值,250uS中断
  0015    30F9    LDIA	0xF9
  0016    1283    CLRB	0x3,5
  0017    0091    LD	0x11,A
24:               	TMR2IF = 0;
  0018    108D    CLRB	0xD,1
25:               	TMR2IE = 1;					//使能Timer2溢出中断
  0019    148E    SETB	0xE,1
26:               	
27:               	T2CON = 0B00000101;			//开启Timer2，预分频为1：4，后分频为1：1，则定时时间为（249+1）*4*（4/16M）=250us
  001A    3005    LDIA	0x5
  001B    0093    LD	0x13,A
28:               	
29:               //---------------------------------------	
30:               	WPUB = 0B00001000;		//使能上拉，使RB3为高
  001C    3008    LDIA	0x8
  001D    0088    LD	0x8,A
31:               	TRISB = 0B00001000;		//设置RB3的IO口为输入
  001E    0085    LD	0x5,A
32:               	IOCB = 0B00001000;		//允许RB3的IO口电平变化中断
  001F    0089    LD	0x9,A
33:               	RBIE = 1;				//使能PORTB电平变化中断
  0020    158B    SETB	0xB,3
34:               	INTCON = 0xC8;			//允许PORTB中断，屏蔽其余中断、允许外设中断，清RB中断标志位
  0021    30C8    LDIA	0xC8
  0022    008B    LD	0xB,A
35:               	PORTB;					//读取PORTA并锁存
  0023    0806    LD	A,0x6
36:               //---------------------------------------		
37:               
38:               	while(1)			
  0024    0064    CLRWDT
  0025    2824    JP	0x24
39:               	{
40:               		asm("clrwdt");
41:               	}
42:               }
43:               
44:               
45:               /***********************************************
46:               函数名称：PB_Isr
47:               函数功能：PB电平变化中断服务
48:               入口参数：无
49:               出口参数：无
50:               备注：
51:               ************************************************/
52:               void interrupt PB_Isr()
53:               {
54:               	if(RBIF)
  0026    1C0B    SNZB	0xB,0
  0027    282E    JP	0x2E
55:               	{
56:               		RBIF = 0;			//清中断标志
  0028    100B    CLRB	0xB,0
57:               		RA2 = !RA2;
  0029    3004    LDIA	0x4
  002A    1683    SETB	0x3,5
  002B    0686    XORR	0x6
58:               		PORTB;				//读取PORTB状态,出中断的时候必须读取IO状态，
  002C    1283    CLRB	0x3,5
  002D    0806    LD	A,0x6
59:               							//否则会出现检测不到电平变化的现象
60:               	}
61:               	if(TMR2IF)
  002E    1283    CLRB	0x3,5
  002F    1C8D    SNZB	0xD,1
  0030    2835    JP	0x35
62:               	{
63:               		TMR2IF = 0;
  0031    108D    CLRB	0xD,1
64:               		
65:               		PORTA ^= 0X02;
  0032    3002    LDIA	0x2
  0033    1683    SETB	0x3,5
  0034    0686    XORR	0x6
  0035    0871    LD	A,0x71
  0036    008A    LD	0xA,A
  0037    0E70    SWAPA	0x70
  0038    0083    LD	0x3,A
  0039    0EFE    SWAPR	0x7E
  003A    0E7E    SWAPA	0x7E
  003B    0009    RETI
66:               	}
67:               }
---- stringtab ------------------------------------------------------------------
---- reset_enter ------------------------------------------------------------------
  0000    280A    JP	0xA
  000A    280B    JP	0xB
---- start_initialization ------------------------------------------------------------------
---- interrupt_function_enter ----------------------------------------------------------
  0004    00FE    LD	0x7E,A
  0005    0E03    SWAPA	0x3
  0006    00F0    LD	0x70,A
  0007    080A    LD	A,0xA
  0008    00F1    LD	0x71,A
  0009    2826    JP	0x26
---- common_function ------------------------------------------------------------------
  000B    0183    CLR	0x3
  000C    280D    JP	0xD
