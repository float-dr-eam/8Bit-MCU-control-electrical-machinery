---- H:\MyDownloads\说明书&测试报告\开发包\SC8F072开发包\SC8F072_DEMO_C\SC8F072_CMP_C\SC8F072_CMP_C.c ----------------------------------------------------------------------
1:                /*-------------------------------------------
2:                
3:                程序名称：IO设置示例程序
4:                日期版本：2023/09/14 <V1.0>
5:                
6:                      
7:                *本程序由 &应用支持部& 编写整理
8:                -------------------------------------------*/
9:                
10:               
11:               #include <sc.h>						//芯片头文件，会根据工程选项自动寻找对应型号头文件
12:               
13:               
14:               void main(void)
  000D    0000    NOP
  000E    0064    CLRWDT
15:               {
16:               	asm("nop");
17:               	asm("clrwdt");
18:               	
19:               	OSCCON = 0x72;					//16MHZ,内部振荡器用作系统时钟,CONFIG关闭WDT时必需软件打开WDT
  000F    3072    LDIA	0x72
  0010    1283    CLRB	0x3,5
  0011    0094    LD	0x14,A
20:               	OPTION_REG = 0x09;				//配置WDT时间，09为2分频，即16*2=32ms溢出
  0012    3009    LDIA	0x9
  0013    0081    LD	0x1,A
21:               	
22:               	
23:               	WPUB = 0B00000000;
  0014    0188    CLR	0x8
24:               	WPDB = 0B00000000;
  0015    0187    CLR	0x7
25:               	ODCONB = 0B00000000;			//配置PORTB输出情况
  0016    018C    CLR	0xC
26:               	IOCB = 0B00000000;
  0017    0189    CLR	0x9
27:               		
28:               	TRISB = 0B00000000;
  0018    0185    CLR	0x5
29:               	
30:               	/***************************************************
31:               	比较器控制寄存器 CMPCON0(0FH)
32:               	Bit7  CMPEN:  CMP使能位
33:               		1=  使能CMP
34:               		0=  禁止CMP
35:               	Bit6  CMPPS:  CMP正端输入选择位
36:               		1=  CMP+端口电压
37:               		0=  VDD经过内部电阻分压后的电压
38:               	Bit5~Bit3  CMPNS<2:0>:  CMP负端输入选择位
39:               		000=  CMP0- 端口电压
40:               		001=  CMP1- 端口电压
41:               		010=  CMP2-端口电压
42:               		011=  CMP3-端口电压
43:               		100=  VDD经过内部电阻分压后的电压
44:               		101=  BG
45:               		11x=  BG
46:               	Bit2  CMPNV:  CMPO端口输出取反控制位
47:               		1=  CMPOUT在CMPO端口取反输出
48:               		0=  CMPOUT在CMPO端口正常输出
49:               	Bit1  CMPOUT:  CMP结果位
50:               	Bit0  CMPOEN:  CMPO端口输出使能位
51:               		1=  使能CMPO端口输出CMPOUT
52:               		0=  禁止CMPO端口输出CMPOUT
53:               	*****************************************************/
54:               	CMPCON0 = 0B00111001;			//配置比较器正端为VDD分压，负端为BG1.2V，使能比较器输出
  0019    3039    LDIA	0x39
  001A    008F    LD	0xF,A
55:               	
56:               	/***************************************
57:               	比较器控制寄存器 CMPCON1(10H)
58:               	Bit7  CMPIM:  CMP中断触发边沿选择
59:               		1=  CMP输出的下降沿触发中断
60:               		0=  CMP输出的上升沿触发中断
61:               	Bit6  AN_EN:  模拟选择位，选择CMP+、CMPX-的模拟或数字功能
62:               		1=  模拟口
63:               		0=  数字口
64:               	Bit5  RBIAS_H:  具体用法参考比较器框图
65:               	Bit4  RBIAS_L:  具体用法参考比较器框图
66:               	Bit3~Bit0  LVDS<3:0>:  内部电阻分压比选择位
67:               	****************************************************/
68:               	
69:               	CMPCON1 = 0B10010111;			//	测试VDD电压低于3.6V中断，故为下降沿触发
  001B    3097    LDIA	0x97
  001C    0090    LD	0x10,A
70:               									//Bit5~0对应的电压值可参考芯片说明书
71:               	
72:               	INTCON = 0XC0;					//允许总中断及外设中断
  001D    30C0    LDIA	0xC0
  001E    008B    LD	0xB,A
73:               	PIE1 = 0X20;					//允许比较器中断
  001F    3020    LDIA	0x20
  0020    008E    LD	0xE,A
74:               	CMPEN = 1;						//比较器使能
  0021    178F    SETB	0xF,7
75:               	CMPIF =0;						//清比较器中断标志位
  0022    128D    CLRB	0xD,5
76:               	while(1)
  0023    0064    CLRWDT
  0024    2823    JP	0x23
77:               	{
78:               		asm("clrwdt");
79:               		
80:               						
81:               	}
82:               }
83:               
84:               /***********************************************
85:               函数名称：PB_Isr
86:               函数功能：INT中断服务
87:               入口参数：无
88:               出口参数：无
89:               备注：
90:               ************************************************/
91:               void interrupt CMP_Isr()
92:               {
93:               	if(CMPIF)
  0025    1283    CLRB	0x3,5
  0026    1E8D    SNZB	0xD,5
  0027    282B    JP	0x2B
94:               	{
95:               		CMPIF = 0;			//清中断标志
  0028    128D    CLRB	0xD,5
96:               		PORTB ^= 0X10;
  0029    3010    LDIA	0x10
  002A    0686    XORR	0x6
  002B    0871    LD	A,0x71
  002C    008A    LD	0xA,A
  002D    0E70    SWAPA	0x70
  002E    0083    LD	0x3,A
  002F    0EFE    SWAPR	0x7E
  0030    0E7E    SWAPA	0x7E
  0031    0009    RETI
97:               		
98:               	}
99:               }
---- stringtab ------------------------------------------------------------------
---- reset_enter ------------------------------------------------------------------
  0000    280A    JP	0xA
  000A    280B    JP	0xB
---- start_initialization ------------------------------------------------------------------
---- interrupt_function_enter ----------------------------------------------------------
  0004    00FE    LD	0x7E,A
  0005    0E03    SWAPA	0x3
  0006    00F0    LD	0x70,A
  0007    080A    LD	A,0xA
  0008    00F1    LD	0x71,A
  0009    2825    JP	0x25
---- common_function ------------------------------------------------------------------
  000B    0183    CLR	0x3
  000C    280D    JP	0xD
